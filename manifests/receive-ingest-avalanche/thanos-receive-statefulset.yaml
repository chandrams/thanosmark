apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database-write-hashring
    app.kubernetes.io/instance: thanos-bench
    app.kubernetes.io/name: thanos-receive
    app.kubernetes.io/part-of: thanos-bench
    controller.receive.thanos.io: thanos-receive-controller
    controller.receive.thanos.io/hashring: default
  name: thanos-receive-default
  namespace: {{ .Env.NAMESPACE }}
spec:
  minReadySeconds: 120
  podManagementPolicy: Parallel
  replicas: {{ .Env.RECEIVE_REPLICAS }}
  selector:
    matchLabels:
      app.kubernetes.io/component: database-write-hashring
      app.kubernetes.io/instance: thanos-bench
      app.kubernetes.io/name: thanos-receive
      app.kubernetes.io/part-of: thanos-bench
      controller.receive.thanos.io/hashring: default
  serviceName: thanos-receive-default
  template:
    metadata:
      labels:
        app.kubernetes.io/component: database-write-hashring
        app.kubernetes.io/instance: thanos-bench
        app.kubernetes.io/name: thanos-receive
        app.kubernetes.io/part-of: thanos-bench
        controller.receive.thanos.io/hashring: default
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - thanos-receive
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - thanos-bench
                namespaces:
                  - {{ .Env.NAMESPACE }}
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - thanos-receive
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - thanos-bench
                namespaces:
                  - {{ .Env.NAMESPACE }}
                topologyKey: topology.kubernetes.io/zone
              weight: 100
      containers:
        - args:
            - receive
            - --log.level=debug
            - --log.format=logfmt
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --remote-write.address=0.0.0.0:19291
            - --receive.replication-factor=3
            - --tsdb.path=/var/thanos/receive
            - --tsdb.retention=4d
            - --label=replica="$(NAME)"
            - --label=receive="true"
            - --objstore.config=$(OBJSTORE_CONFIG)
            - --receive.local-endpoint=$(NAME).thanos-receive-default.$(NAMESPACE).svc.cluster.local:10901
            - --receive.hashrings-file=/var/lib/thanos-receive/hashrings.json
            - |-
              --tracing.config="config":
                "sampler_param": 2
                "sampler_type": "ratelimiting"
                "service_name": "thanos-receive"
              "type": "JAEGER"
            - --receive.default-tenant-id=FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
            - --receive.grpc-compression=none
            - --receive.hashrings-algorithm=hashmod
            - --receive.hashrings-file-refresh-interval=5s
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OBJSTORE_CONFIG
              valueFrom:
                secretKeyRef:
                  key: thanos.yaml
                  name: thanos-object-storage
          image: {{ .Env.THANOS_IMAGE }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /-/healthy
              port: 10902
              scheme: HTTP
            periodSeconds: 30
          name: thanos-receive
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
            - containerPort: 19291
              name: remote-write
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/thanos/receive
              name: data
              readOnly: false
            - mountPath: /var/lib/thanos-receive
              name: hashring-config
      nodeSelector:
        kubernetes.io/os: linux
      securityContext: {}
      serviceAccountName: thanos-receive
      terminationGracePeriodSeconds: 900
      volumes:
        - configMap:
            name: thanos-receive-controller-tenants-generated
          name: hashring-config
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/component: database-write-hashring
          app.kubernetes.io/instance: thanos-bench
          app.kubernetes.io/name: thanos-receive
          app.kubernetes.io/part-of: thanos-bench
          controller.receive.thanos.io/hashring: default
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
